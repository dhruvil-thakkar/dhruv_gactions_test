name: Dhruv Test Workflow

on:
  schedule:
    - cron: '*/20 * * * *'
    - cron: '0 18 21-25 * *'
    - cron: '0 20 1 * *'
  issues:
    types:
      - opened
  # push:
  #   branches:
  #     - main


jobs:
  aws-nuke:
    runs-on: ubuntu-latest
    steps:        
       - name: Checkout code
         uses: actions/checkout@v4

       - name: Input Check   
         run: |
             if [ ${{ github.event_name }} == issues ]
              then
                echo ${{ github.event_name }}
                payload_body="${{ github.event.issue.body }}"
                echo "$payload_body"
                account=$(echo "$payload_body" |grep -A2 "### Account to Nuke AWS Services" | tail -n1)
                echo $account
                nuke_resources=$(echo "$payload_body" | grep -A2 "### Do you want to run Dry Run" | tail -n1)
                echo $nuke_resources
                mkdir -p aws-nuke
                echo "CONFIG_FILE=./aws-nuke/issue-form-config.yaml" >> $GITHUB_ENV

                cat > ./aws-nuke/issue-form-config.yaml <<EOF
                ---
                This is Dhruv
                <EOF

                #touch ./aws-nuke/issue-form-config.yaml
                #echo "HI" > ./aws-nuke/issue-form-config.yaml
                
                cat ./aws-nuke/issue-form-config.yaml
             fi


      #  - name: GET Current Date and Check if Today will be Dry Run or Nuke Run
      #    run: |
      #     TODAYS_DATE=$(date +%d)
      #     DATE_TO_NUKE=1
      #     echo "Date to nuke $DATE_TO_NUKE"

      #     date

      #     echo -e "Todays Date is: $TODAYS_DATE"
      #     DAY_TO_RUN=$(date -d "`date -d"+1month" +%Y%m01` -1 week" +%d)
      #     echo -e "The day a week before the first is: $DAY_TO_RUN"

      #     if [ $TODAYS_DATE == $DAY_TO_RUN ]
      #       then
      #         echo "Today's Date matches Date to Run. This will invoke Dry Run"
      #         echo "DRY_RUN=Yes" >> $GITHUB_ENV
      #         echo "TO_NUKE=No" >> $GITHUB_ENV
      #     elif [ $TODAYS_DATE == $DATE_TO_NUKE ]
      #       then
      #         echo "Today's Date matches Date to NUKE. Resources will be Nuked Today."
      #         echo "TO_NUKE=Yes" >> $GITHUB_ENV
      #         echo "DRY_RUN=No" >> $GITHUB_ENV
      #     else
      #         echo "TO_NUKE=No" >> $GITHUB_ENV
      #         echo "DRY_RUN=No" >> $GITHUB_ENV
      #         echo "Today is not the day for DRY RUN or to NUKE Resources."
      #     fi

      #  - name: Check value
      #    run: |
      #      echo "The DRY_RUN value is: ${{ env.DRY_RUN }}"
      #      echo "The TO_NUKE value is: ${{ env.TO_NUKE }}"

      #  - name: Download and Extract 
      #    run: |
      #      if [ $DRY_RUN == Yes ] || [ TO_NUKE == Yes ]
      #      then
      #         mkdir -p aws-nuke
      #         wget -c https://github.com/rebuy-de/aws-nuke/releases/download/v2.25.0/aws-nuke-v2.25.0-linux-amd64.tar.gz -O - | tar -xz -C aws-nuke 
      #         ./aws-nuke/aws-nuke-v2.25.0-linux-amd64 --help
      #      else
      #        echo "Not to execute DRY RUN or NUKE Today!"
      #      fi


      # - name: Run aws-nuke
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: 'us-west-2'
      #   run: | 
      #     nuke_resources="No"
      #     echo -e $nuke_resources

      #     if [ ${nuke_resources} == "Yes" ]
      #     then
      #       echo "Running AWS Nuke. This will delete resources"
      #     else
      #       echo "Running AWS Nuke. This will be a DRY RUN" 
      #       ./aws-nuke/aws-nuke-v2.25.0-linux-amd64 -c ./config/nuke-config.yml --force --force-sleep 3 > ./aws-nuke/output.txt
      #       cat ./aws-nuke/output.txt
      #     fi

      # - name: Create CSV File
      #   run: |
      #     echo -e "Creating CSV File\n"
      #     echo -e 'Region,Resource type,Resource name,Tags,Comments' > ./aws-nuke/aws-nuke.csv
      #     cat ./aws-nuke/output.txt |grep -v -e 'aws-nuke' -e 'Do you really' -e 'Waiting' -e 'Scan complete' -e 'The above' -e 'Nuke complete' -e '^$'| sed 's/ - /,/g' |sed 's/\[//;s/\]//'|sort >> ./aws-nuke/aws-nuke.csv
      #     echo ""
      #     cat ./aws-nuke/aws-nuke.csv

      # - name: Send email
      #     #EMAIL_LIST='filip.mietka@redbull.com, henry.hernandez@redbull.com, aws.sandbox.nuke@redbull.com'
      #     #SUBJECT=''
      #   run: |
      #     echo "Hello"
      #     # mail -s "AWS NUKE Output" sysadmdhruvil@gmail.com << "Attached is the output of running aws-nuke job" -A ./aws-nuke/aws-nuke.csv